/* Auto-generated by genmsg_java.py for file /data/private/luser/workspace/usc-ros-pkg/p2os/p2os_driver/msg/GripperState.msg */

package org.ros.message.p2os_driver;

import java.nio.ByteBuffer;

public class GripperState extends org.ros.message.Message {

  public org.ros.message.p2os_driver.GripState grip = new org.ros.message.p2os_driver.GripState();
  public org.ros.message.p2os_driver.LiftState lift = new org.ros.message.p2os_driver.LiftState();

  public GripperState() {
  }

  public static java.lang.String __s_getDataType() { return "p2os_driver/GripperState"; }
  @Override  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "300b38b2a4173deb725df02fa70fc70b"; }
  @Override  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "GripState grip\n" +
"LiftState lift\n" +
"\n" +
"================================================================================\n" +
"MSG: p2os_driver/GripState\n" +
"# direction -1 is inward, +1 is outward, 0 is stationary\n" +
"uint32 state\n" +
"int32 dir\n" +
"bool inner_beam\n" +
"bool outer_beam\n" +
"bool left_contact\n" +
"bool right_contact\n" +
"\n" +
"================================================================================\n" +
"MSG: p2os_driver/LiftState\n" +
"# direction -1 is downard, +1 is upward, 0 is stationary\n" +
"int32 state\n" +
"int32 dir\n" +
"float32 position\n" +
"\n" +
""; }
  @Override  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  @Override
  public GripperState clone() {
    GripperState c = new GripperState();
    c.deserialize(serialize(0));
    return c;
  }

  @Override
  public void setTo(org.ros.message.Message m) {
    deserialize(m.serialize(0));
  }

  @Override
  public int serializationLength() {
    int __l = 0;
    __l += grip.serializationLength();
    __l += lift.serializationLength();
    return __l;
  }

  @Override
  public void serialize(ByteBuffer bb, int seq) {
    grip.serialize(bb, seq);
    lift.serialize(bb, seq);
  }

  @Override
  public void deserialize(ByteBuffer bb) {
    grip.deserialize(bb);
    lift.deserialize(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof GripperState))
      return false;
    GripperState other = (GripperState) o;
    return
      grip.equals(other.grip) &&
      lift.equals(other.lift) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.grip == null ? 0 : this.grip.hashCode());
    result = prime * result + (this.lift == null ? 0 : this.lift.hashCode());
    return result;
  }
} // class GripperState
