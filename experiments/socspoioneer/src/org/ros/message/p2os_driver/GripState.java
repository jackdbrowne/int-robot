/* Auto-generated by genmsg_java.py for file /data/private/luser/workspace/usc-ros-pkg/p2os/p2os_driver/msg/GripState.msg */

package org.ros.message.p2os_driver;

import java.nio.ByteBuffer;

public class GripState extends org.ros.message.Message {

  public long state;
  public int dir;
  public boolean inner_beam;
  public boolean outer_beam;
  public boolean left_contact;
  public boolean right_contact;

  public GripState() {
  }

  public static java.lang.String __s_getDataType() { return "p2os_driver/GripState"; }
  @Override  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "370eb3507be0ed1043be50a3da3a07c6"; }
  @Override  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# direction -1 is inward, +1 is outward, 0 is stationary\n" +
"uint32 state\n" +
"int32 dir\n" +
"bool inner_beam\n" +
"bool outer_beam\n" +
"bool left_contact\n" +
"bool right_contact\n" +
"\n" +
""; }
  @Override  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  @Override
  public GripState clone() {
    GripState c = new GripState();
    c.deserialize(serialize(0));
    return c;
  }

  @Override
  public void setTo(org.ros.message.Message m) {
    deserialize(m.serialize(0));
  }

  @Override
  public int serializationLength() {
    int __l = 0;
    __l += 4; // state
    __l += 4; // dir
    __l += 1; // inner_beam
    __l += 1; // outer_beam
    __l += 1; // left_contact
    __l += 1; // right_contact
    return __l;
  }

  @Override
  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt((int)state);
    bb.putInt(dir);
    bb.put((byte)(inner_beam ? 1 : 0));
    bb.put((byte)(outer_beam ? 1 : 0));
    bb.put((byte)(left_contact ? 1 : 0));
    bb.put((byte)(right_contact ? 1 : 0));
  }

  @Override
  public void deserialize(ByteBuffer bb) {
    state = (long)(bb.getInt() & 0xffffffff);
    dir = bb.getInt();
    inner_beam = bb.get() != 0 ? true : false;
    outer_beam = bb.get() != 0 ? true : false;
    left_contact = bb.get() != 0 ? true : false;
    right_contact = bb.get() != 0 ? true : false;
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof GripState))
      return false;
    GripState other = (GripState) o;
    return
      state == other.state &&
      dir == other.dir &&
      inner_beam == other.inner_beam &&
      outer_beam == other.outer_beam &&
      left_contact == other.left_contact &&
      right_contact == other.right_contact &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (int)(this.state ^ (this.state >>> 32));
    result = prime * result + this.dir;
    result = prime * result + (this.inner_beam ? 1231 : 1237);
    result = prime * result + (this.outer_beam ? 1231 : 1237);
    result = prime * result + (this.left_contact ? 1231 : 1237);
    result = prime * result + (this.right_contact ? 1231 : 1237);
    return result;
  }
} // class GripState
